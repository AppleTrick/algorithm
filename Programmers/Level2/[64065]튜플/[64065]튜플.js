function solution(s) {
    let answer = [];

    s = s.replace("{{",'').replace("}}",'').split("},{").map(e => e.split(','));
    s.sort((a,b) => a.length - b.length);

    answer = [...s[0]];

    for (let i = 1; i < s.length; i++) {
        answer.push(...s[i].filter( (e) => !answer.includes(e) ))        
    }
    return answer.map(e => parseInt(e));
}

const s = "{{2},{2,1},{2,1,3},{2,1,3,4}}";
console.log(solution(s));


/*
문제 보면서 이해가 안되는 부분 해결 방법

[] 로 둘러쌓인 튜플은 [1, 2]랑 [2, 1]은 다른 게 맞습니다.
하지만 순서가 달라질 수 있는 건 저 튜플로 만든 {} 모양의 집합안에서 순서가 달라져도 된다는 뜻이였습니다.

예를들면
튜플 [1, 2] 로 집합을 만든다면 ➔ {1}, {1, 2} 이지만
튜플 [2, 1] 로 집합을 만든다면 ➔ {2}, {2, 1} 입니다.

여기서
[1, 2] ➔ {1}, {1, 2} 에서 {1, 2} 는 {2, 1} 로 순서가 바껴도 같고
[2, 1] ➔ {2}, {2, 1} 에서 {2, 1} 는 {1, 2} 로 순서가 바껴도 같습니다.

다시말해
{1}, {1, 2} = {1}, {2, 1} ➔ [1, 2] 를 가르키고
{2}, {2, 1} = {2}, {1, 2} ➔ [2, 1] 를 가르킵니다

*/